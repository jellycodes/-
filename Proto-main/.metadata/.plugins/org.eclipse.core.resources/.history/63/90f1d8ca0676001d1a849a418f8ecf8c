package com.example.board.vel01.api;

import java.util.List;
import java.util.stream.Collectors;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.board.vel01.domain.Post;
import com.example.board.vel01.repository.PostRepository;
import com.example.board.vel01.service.PostService;

import lombok.extern.slf4j.Slf4j;

@RestController
@RequestMapping("post")
public class PostController {
	
	private final PostRepository postRepository;
	
	private final PostService postService;
	
	@Autowired
	public PostController(PostRepository postRepository, PostService postService) {
		this.postRepository = postRepository;
		this.postService = postService;
	}
	
	@PostMapping
	public ResponseEntity<?> createPost(@RequestBody Post.Request req ){
		
		try {
			Post postEntity = Post.Request.toEntity(req);
			
			postEntity.setNickName(req.getNickName());
			
			List<Post> postEntities = postService.createPost(postEntity);
			System.out.println(postEntities); //엔티티 체크용
			
			List<Post.Response> res = Post.Response.toResponseList(postEntities);
			return ResponseEntity.ok().body(res);
		} catch(Exception e) {
			String err = "에러";
			Post.Response res = Post.Response.builder().error(err).build();
			return ResponseEntity.badRequest().body(res);
		}
	}
	
	
	@GetMapping
	public ResponseEntity<?> retrievePost(){
		List<Post> postEntities = postService.retrieve("moo"); //테스트
		List<Post.Response> res = Post.Response.toResponseList(postEntities);
		return ResponseEntity.ok().body(res);
	}
	
	@PutMapping
	public ResponseEntity<?> updatePost(@RequestBody Post.Request req){
		Post postEntity = Post.Request.toEntity(req);
		postEntity.setNickName("moo"); //테스트용
		List<Post> postEntities = postService.update(postEntity);
		List<Post.Response> res=Post.Response.toResponseList(postEntities);
		
		return ResponseEntity.ok().body(res);
	}
	
	@DeleteMapping
	public ResponseEntity<?> deletePost(@RequestBody Post.Request req){
		try {
			Post postEntity = Post.Request.toEntity(req);
			postEntity.setNickName("moo"); //테스트용
			List<Post> postEntities = postService.delete(postEntity);
			
			List<Post.Response> res = Post.Response.toResponseList(postEntities);
			
			return ResponseEntity.ok().body(res);
		}catch(Exception e) {
			String err = e.getMessage();
			Post.Response res = Post.Response.builder().error(err).build();
			return ResponseEntity.badRequest().body(res);
		}
	}
	
	
	
	
	
}
